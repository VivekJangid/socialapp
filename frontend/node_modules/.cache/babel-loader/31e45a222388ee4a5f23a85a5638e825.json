{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POST, POST_ERROR, UPDATE_LIKES, GET_POSTS, ADD_COMMENT, REMOVE_COMMENT } from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert'; //Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Like Post\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //DisLike Post\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //Delete Post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //Add Comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/actions/post.js"],"names":["ADD_POST","DELETE_POST","GET_POST","POST_ERROR","UPDATE_LIKES","GET_POSTS","ADD_COMMENT","REMOVE_COMMENT","axios","setAlert","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPost","id","addLike","postId","put","likes","removeLike","addPost","formData","config","headers","post","deletePost","delete","addComment","deleteComment","commentId"],"mappings":"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","sourcesContent":["import {\n  ADD_POST,\n  DELETE_POST,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  GET_POSTS,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert';\n\n//Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({ type: GET_POSTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get Post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({ type: GET_POST, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Like Post\nexport const addLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//DisLike Post\nexport const removeLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete Post\nexport const deletePost = (postId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete Comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}