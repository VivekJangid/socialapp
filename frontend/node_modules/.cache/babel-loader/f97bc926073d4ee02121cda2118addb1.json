{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken'; //Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      pa\n    });\n  } catch (err) {}\n}; //RegisterUser\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(errors);\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","pa","err","register","name","email","password","config","headers","body","JSON","stringify","post","payload","data","errors","response","console","log","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP;AAMA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,WAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAACV,WAAN;AAAkBW,MAAAA;AAAlB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY,CAAE;AACjB,CAVM,C,CAYP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOX,QAAP,IAAoB;AACzE,QAAMY,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMX,KAAK,CAACyB,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,gBAAR;AAA0ByB,MAAAA,OAAO,EAAEf,GAAG,CAACgB;AAAvC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOZ,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaF,IAAb,CAAkBC,MAAjC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACI,OAAP,CAAgBC,KAAD,IAAWzB,QAAQ,CAACH,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACD1B,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACD;AACF,CApBM","sourcesContent":["import axios from 'axios';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n} from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({type:USER_LOADED,pa})\n  } catch (err) {}\n};\n\n//RegisterUser\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(errors);\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({ type: REGISTER_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}