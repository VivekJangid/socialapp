{"ast":null,"code":"import { post } from 'request';\nimport { DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES, ADD_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: []\n};\n\nconst postReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.postId ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/reducers/post.js"],"names":["post","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","ADD_POST","initialState","posts","loading","error","postReducer","state","action","type","payload","filter","_id","map","postId","likes"],"mappings":"AAAA,SAASA,IAAT,QAAqB,SAArB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,QALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBP,EAAAA,IAAI,EAAE,IAFa;AAGnBQ,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKX,SAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYJ,QAAAA,KAAK,EAAEO,OAAnB;AAA4BN,QAAAA,OAAO,EAAE;AAArC,OAAP;;AACF,SAAKH,QAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAAnB;AAA8CC,QAAAA,OAAO,EAAE;AAAvD,OAAP;;AACF,SAAKP,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBf,IAAD,IAAUA,IAAI,CAACgB,GAAL,KAAaF,OAA1C,CAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,UAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,KAAK,EAAEK,OAAnB;AAA4BN,QAAAA,OAAO,EAAE;AAArC,OAAP;;AACF,SAAKJ,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBjB,IAAD,IACrBA,IAAI,CAACgB,GAAL,KAAaF,OAAO,CAACI,MAArB,GAA8B,EAAE,GAAGlB,IAAL;AAAWmB,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA1B,SAA9B,GAAkEnB,IAD7D,CAFF;AAKLQ,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF;AACE,aAAOG,KAAP;AAtBJ;AAwBD,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import { post } from 'request';\nimport {\n  DELETE_POST,\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  ADD_POST,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: [],\n};\n\nconst postReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POSTS:\n      return { ...state, posts: payload, loading: false };\n    case ADD_POST:\n      return { ...state, posts: [payload, ...state.posts], loading: false };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return { ...state, error: payload, loading: false };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n"]},"metadata":{},"sourceType":"module"}