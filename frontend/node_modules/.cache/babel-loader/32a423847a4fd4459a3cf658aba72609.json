{"ast":null,"code":"var _jsxFileName = \"/home/vivek/Desktop/repoMern/socialapp/frontend/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  profile: {\n    profile,\n    loading\n  },\n  getProfileById,\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [\"Profile\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No Experience Added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No Experience Added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\n\nconst Profile = ({\n  profile: { profile, loading },\n  getProfileById,\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          Profile\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Experience Added</h4>\n              )}\n            </div>\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Experience Added</h4>\n              )}\n            </div>\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileById: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}