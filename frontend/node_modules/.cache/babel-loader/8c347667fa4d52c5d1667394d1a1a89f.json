{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_PROFILE, DELETE_ACCOUNT, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; //Get current UserProfile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get All Profiles\n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or Update Profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    console.log(err.response.data);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    console.log(err.response.data);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Account & PRofile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you Sure? THis cannot be undone')) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert('Your Account is has been Deleted permanently'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/actions/profile.js"],"names":["axios","setAlert","CLEAR_PROFILE","DELETE_ACCOUNT","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","GET_PROFILES","createProfile","formData","history","edit","config","headers","post","push","console","log","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  CLEAR_PROFILE,\n  DELETE_ACCOUNT,\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n} from './types';\n\n//Get current UserProfile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get All Profiles\nexport const getProfiles = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({ type: GET_PROFILES, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n\n// Create or Update Profile\nexport const createProfile =\n  (formData, history, edit = false) =>\n  async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const res = await axios.post('/api/profile', formData, config);\n      dispatch({ type: GET_PROFILE, payload: res.data });\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n      if (!edit) {\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      console.log(err.response.data);\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  };\n\n//Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    console.log(err.response.data);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete Experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n//Delete Education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n//Delete Account & PRofile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you Sure? THis cannot be undone')) {\n    try {\n      const res = await axios.delete(`/api/profile`);\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: DELETE_ACCOUNT });\n      dispatch(setAlert('Your Account is has been Deleted permanently'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status,\n        },\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}