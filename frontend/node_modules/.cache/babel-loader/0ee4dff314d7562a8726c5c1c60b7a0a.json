{"ast":null,"code":"var _jsxFileName = \"/home/vivek/Desktop/repoMern/socialapp/frontend/src/components/profiles/Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-connectdevelop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \"Browse and connect with Developers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profiles\",\n        children: profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileItem, {\n          profile: profile\n        }, profile._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No Profiles Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfiles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","ProfileItem","Profiles","profile","profiles","loading","length","map","_id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,WAAF;AAAeG,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AAAA;;AACpET,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,cACGK,OAAO,gBACN,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,QAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACCF,QAAQ,CAACG,GAAT,CAAcJ,OAAD,iBACX,QAAC,WAAD;AAA+B,UAAA,OAAO,EAAEA;AAAxC,WAAkBA,OAAO,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA7BD;;GAAMN,Q;;KAAAA,Q;AA+BNA,QAAQ,CAACO,SAAT,GAAqB;AACnBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UADP;AAEnBX,EAAAA,WAAW,EAAEH,SAAS,CAACe,IAAV,CAAeD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADmB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className=\"large text-primary\">Developers</h1>\n          <p className=\"lead\">\n            <i className=\"fab fa-connectdevelop\"></i>Browse and connect with\n            Developers\n          </p>\n          <div className=\"profiles\">\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No Profiles Found</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfiles: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n"]},"metadata":{},"sourceType":"module"}