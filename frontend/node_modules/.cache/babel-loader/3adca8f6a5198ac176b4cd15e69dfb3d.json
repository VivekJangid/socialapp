{"ast":null,"code":"import { ADD_POST, DELETE_POST, GETPOSTS, POST_ERROR, UPDATE_LIKES } from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert'; //Get Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GETPOSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Like Post\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //DisLike Post\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n}; //Delete Post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR // payload: { msg: err.response.statusText, status: err.response.status },\n\n    });\n  }\n};","map":{"version":3,"sources":["/home/vivek/Desktop/repoMern/socialapp/frontend/src/actions/post.js"],"names":["ADD_POST","DELETE_POST","GETPOSTS","POST_ERROR","UPDATE_LIKES","axios","setAlert","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postId","put","likes","removeLike","addPost","formData","config","headers","post","deletePost","delete"],"mappings":"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","sourcesContent":["import {\n  ADD_POST,\n  DELETE_POST,\n  GETPOSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n} from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert';\n\n//Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({ type: GETPOSTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Like Post\nexport const addLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//DisLike Post\nexport const removeLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete Post\nexport const deletePost = (postId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      // payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}